#!/usr/bin/env python

# Usage:
#   runpy 'pkg.module.RunnerClass' [runner options]
#

from optparse import OptionParser
from sys      import exit

def get_class(kls):
    """
    Ganked from: http://stackoverflow.com/questions/452969/does-python-have-an-equivalent-to-java-class-forname
    """
    parts = kls.split('.')
    module = ".".join(parts[:-1])
    m = __import__( module )
    for comp in parts[1:]:
        m = getattr(m, comp)
    return m

if __name__ == '__main__':
    parser = OptionParser(usage="%prog [options] package.MyRunnerClass [MyRunnerClass options]")
    parser.disable_interspersed_args()
    (opts,args) = parser.parse_args()

    if len(args) < 1:
        print "Error: No class provided"
        parser.print_help()
        exit(1)

    runner_arg = args[0]
    del args[0]
    runner_class = get_class(runner_arg)

    exit(runner_class(args).run())
